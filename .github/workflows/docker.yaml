name: docker

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      packages: write
      contents: read
      attestations: write
    env:
      REGISTRY: index.docker.io
      REGISTRY_NAME: fontebasso/php-nginx

    outputs:
      VERSION: ${{ steps.vars.outputs.VERSION }}
      MAJOR: ${{ steps.vars.outputs.MAJOR }}
      MINOR: ${{ steps.vars.outputs.MINOR }}

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install Syft
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin

      - name: Publish version env var
        run: echo "VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: fontebasso
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract version parts
        id: vars
        run: |
          IFS='.' read -r MAJOR MINOR PATCH <<< "${{ env.VERSION }}"
          echo "MAJOR=$MAJOR" >> $GITHUB_ENV
          echo "MINOR=$MINOR" >> $GITHUB_ENV
          echo "VERSION=${{ env.VERSION }}" >> $GITHUB_OUTPUT
          echo "MAJOR=$MAJOR" >> $GITHUB_OUTPUT
          echo "MINOR=$MINOR" >> $GITHUB_OUTPUT

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_NAME }}
          tags: |
            ${{ env.VERSION }}
            ${{ env.MAJOR }}.${{ env.MINOR }}
            ${{ env.MAJOR }}
            latest
          annotations: |
            org.opencontainers.image.title=${{ env.REGISTRY_NAME }}
            org.opencontainers.image.description=$(cat README.md)

      - name: Build and push
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          push: true
          build-args: |
            BUILD_ID=${{ github.run_id }}
            COMMIT_ID=$(git rev-parse --short "$GITHUB_SHA")

      - name: Docker Hub Description
        uses: peter-evans/dockerhub-description@v4
        with:
          username: fontebasso
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: ${{ env.REGISTRY_NAME }}

      - name: Extract image digests
        id: extract-digest
        shell: bash
        run: |
          for tag in $(echo "${{ steps.meta.outputs.tags }}" | grep -Ev '^$' | tr ',' '\n'); do
            for platform in linux/amd64 linux/arm64; do
              digest=$(docker buildx imagetools inspect "${tag}" --raw | jq -r ".manifests[] | select(.platform.architecture==\"${platform##*/}\") | .digest")
              if [ -n "$digest" ]; then
                normalized_tag=$(echo "${tag}_${platform}" | tr ':' '_' | tr '.' '_' | tr '/' '_' | tr '-' '_')
                echo "${normalized_tag}=${digest}" >> digest_mapping.txt
                mkdir -p sbom
                syft "${tag}" -o spdx-json > "sbom/${normalized_tag}.sbom.spdx.json"
              fi
            done
          done

      - name: Upload digest mapping file
        uses: actions/upload-artifact@v4
        with:
          name: digest_mapping
          path: digest_mapping.txt

      - name: Upload SBOM files
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: sbom

  attest:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      packages: write
      contents: read
      attestations: write
    env:
      REGISTRY: index.docker.io
      REGISTRY_NAME: fontebasso/php-nginx

    strategy:
      matrix:
        platform: ["linux/amd64", "linux/arm64"]
        tag: ["latest", "${{ needs.build.outputs.VERSION }}", "${{ needs.build.outputs.MAJOR }}", "${{ needs.build.outputs.MAJOR }}.${{ needs.build.outputs.MINOR }}"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: fontebasso
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Download digest mapping file
        uses: actions/download-artifact@v4
        with:
          name: digest_mapping

      - name: Download SBOM files
        uses: actions/download-artifact@v4
        with:
          name: sbom

      - name: Set digest for tag
        id: set-digest
        run: |
          normalized_tag=$(echo "${{ env.REGISTRY_NAME }}:${{ matrix.tag }}_${{ matrix.platform }}" | tr ':' '_' | tr '.' '_' | tr '/' '_' | tr '-' '_')
          TAG_DIGEST=$(grep "^${normalized_tag}=" digest_mapping.txt | cut -d '=' -f 2)
          echo "TAG_NORMALIZED=${normalized_tag}" >> $GITHUB_ENV
          echo "TAG_DIGEST=${TAG_DIGEST}" >> $GITHUB_ENV

      - name: Attest
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.REGISTRY_NAME }}
          subject-digest: ${{ env.TAG_DIGEST }}
          push-to-registry: true

      - name: Attest SBOM
        uses: actions/attest@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.REGISTRY_NAME }}
          subject-digest: ${{ env.TAG_DIGEST }}
          predicate-type: https://spdx.dev/Document
          predicate: sbom/${{ env.TAG_NORMALIZED }}.sbom.spdx.json
          push-to-registry: true
